<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="entityDataSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCADAASwDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2aiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKSigk
        CgBaKY8qRjLuqj3OKpvrOnxn5ruLPorBv5U0m9hNpbl4DFFY7+J7BfumV/8AdjP9cVE3iu2/5Z21w34A
        f1qvZy7E+0j3N2jNc6fFidrJ/wDvsUf8JZ/04t/39H+FP2U+wvax7nRUZrnh4rj/AIrOQfRgakXxXZ/x
        wTr/AMBB/rR7KfYftI9zeorKj8Saa/3rjb/vIR/Sr0N7bXAzDPE/+6wNS4yW6KUk9mTUUA0tSMKKKKAC
        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
</value>
  </data>
</root>